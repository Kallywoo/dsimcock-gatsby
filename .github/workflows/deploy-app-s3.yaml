name: deploy-app-on-s3
on:
  pull_request:
    branches: [main]
    types: [closed]
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_S3_BUCKET_NAME: dsimcockandson.com
      AWS_CF_DISTRIBUTION_ID: E3H4Q7XAXCFWFX
      AWS_BUCKET_REGION: us-east-1
    strategy:
      matrix:
        node-version: [15.x]
    steps:
      - uses: actions/checkout@main
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: yarn
      - name: create env file
        run: |
          touch .env
          echo CONTENTFUL_SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID }} >> .env.production
          echo CONTENTFUL_ACCESS_TOKEN=${{ secrets.CONTENTFUL_ACCESS_TOKEN }} >> .env.production
          echo TARGET_BUCKET_NAME=${{ env.AWS_S3_BUCKET_NAME }} >> .env.production
          echo AWS_REGION=${{ env.AWS_BUCKET_REGION }} >> .env.production
      - name: Build Application
        run: yarn build
      - name: Deploy Application
        run: yarn deploy
        env:
          DISTRIBUTION: ${{ env.AWS_CF_DISTRIBUTION_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-west-1"
      - name: Create CloudFront Cache Invalidation
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ env.AWS_CF_DISTRIBUTION_ID }}
          PATHS: "/*"
          AWS_REGION: "eu-west-1"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
